bool isValidParenthesis(string exp)
{
    // Write your code here.
    int n = exp.size();
    stack<char>st;

    for(int i=0;i<n;i++){
        if(exp[i] == '(' || exp[i] == '{' || exp[i] == '['){
            st.push(exp[i]);
        }
        else {
          if(exp[i] == ')'){
              if(!st.empty() && st.top() == '('){
                  st.pop();
              } else {
                return false;
              }
          }
          if (exp[i] == '}') {
            if (!st.empty() && st.top() == '{') {
              st.pop();
            } else {
              return false;
            }
          }
          if(exp[i] == ']'){
              if(!st.empty() && st.top() == '['){
                  st.pop();
              }
              else{
                  return false;
              }
          }
        }
    }
    if(!st.empty()) return false;
    return true;
}
