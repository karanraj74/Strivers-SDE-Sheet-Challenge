void solve(int idx,int k,vector<int>&arr,vector<int>&v,vector<vector<int>>&ans){
    // base case
    
    if(idx == arr.size()){
        if(k == 0){
            ans.push_back(v);
        }
        return;
    }
    // recursive case
    // take
    
        v.push_back(arr[idx]);
        solve(idx+1,k-arr[idx],arr,v,ans);
        v.pop_back();

    // not take
    solve(idx+1,k,arr,v,ans);
}
vector<vector<int>> findSubsetsThatSumToK(vector<int> arr, int n, int k)
{
    vector<vector<int>>ans;
    vector<int>v;
    solve(0,k,arr,v,ans);
    return ans;
}
