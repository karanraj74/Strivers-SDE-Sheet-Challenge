Node *findMiddle(Node *head) {
    // Approach 1
    // if(head == NULL || head->next == NULL) return head;

    // int length = 0;
    // Node* curr = head;

    // while(curr != NULL){
    //     length++;
    //     curr = curr->next;
    // }
    // // cout<<length<<endl;
    // Node* newHead = head;
    // for(int i=0;i<length/2;i++){
    //     newHead = newHead->next;
    // }
    // return newHead;

    // Approach 2
    Node *slow = head,*fast = head;
    while(fast && fast->next){
        slow = slow->next;
        fast = fast->next->next;
    }
    return slow;
}
